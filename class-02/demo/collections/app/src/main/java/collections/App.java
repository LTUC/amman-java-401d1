/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package collections;

import java.util.*;

public class App {

    public static void main(String[] args) {
        // arrays
        // fixed size, once created, size cannot change
        // same type for all elements
        int numbersArray [] = new int[3]; // initialize an array of size 3 (initially, all elements are 0)
        int []anotherNumbersArray = {1,2,3}; // initialize an array of size three, with 1,2,3 as elemens

        System.out.println("anotherNumberArray content");
        for(int i = 0; i < anotherNumbersArray.length; i++){
            System.out.println(anotherNumbersArray[i]);
        }

        System.out.println("Looping another way");
        for(int i: anotherNumbersArray){
            System.out.println(i);
        }

        // Collections - Arraylist
        // Size can be modified (we can add and remove)
        ArrayList<Integer> listOfNumbers = new ArrayList<>(); //Create an empty list ..
        ArrayList<Integer> initializedWithVales = new ArrayList<>(Arrays.asList(1,2,3,4,5,6,7)); //Create a list with initial values

        // Add to array list ..
        listOfNumbers.add(5);
        listOfNumbers.add(15);
        listOfNumbers.add(20);
        listOfNumbers.add(20); //duplicates are allowed
        // Add to specific index
        listOfNumbers.add(4,25);

        System.out.println("ArrayList elements, with counter loop");
        for(int i = 0; i < listOfNumbers.size(); i++){
            System.out.println(listOfNumbers.get(i));
        }

        System.out.println("And we can also remove");
        listOfNumbers.remove(0);
        System.out.println("ArrayList elements, forEach method");
        listOfNumbers.forEach((item) -> System.out.println(item));

        System.out.println("Another way of looping .. ");
        for(Integer item : listOfNumbers){
            System.out.println(item);
        }

        // Collections - HashSets
        // We can add and remove
        // Duplicates are not allowed
        Set<Integer> integersSet = new HashSet<Integer>();

        integersSet.add(1);
        integersSet.add(2);
        integersSet.add(3);
        integersSet.add(1);

        System.out.println("What do we have in the set .. ");
        // how to loop over the set ...
        for(Integer item: integersSet){
            System.out.println(item);
        }

        // Collections - HashMap
        HashMap<Integer,String> lsitOfStudents = new HashMap<>();

        lsitOfStudents.put(1,"Salah");
        lsitOfStudents.put(2,"Rama");

        System.out.println(lsitOfStudents);
        lsitOfStudents.put(2,"Ahmad");  // keys cannot be duplicated, so this will replace the previous entry
        System.out.println(lsitOfStudents);


    }
}
